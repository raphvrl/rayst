name: Release

on:
  push:
    tags: ["v*"]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.platform.name }}
    strategy:
      matrix:
        platform:
          - name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: rayst
            archive: rayst-linux-x86_64.zip

          - name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: rayst.exe
            archive: rayst-windows-x86_64.zip

          - name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bin: rayst
            archive: rayst-macos-x86_64.zip

    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Build and package
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.platform.target }}
          mkdir release
          cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} release/
          cp README.md release/
          cp -r scenes screenshots release/
          cd release
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            7z a ../${{ matrix.platform.archive }} *
          else
            zip -r ../${{ matrix.platform.archive }} *
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: ${{ matrix.platform.archive }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: find artifacts -name "*.zip" -exec mv {} . \;

      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          title: $version
          prefix: v
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
